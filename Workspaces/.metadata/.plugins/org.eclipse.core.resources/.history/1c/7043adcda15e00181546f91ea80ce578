package tc.webapp;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import javax.sql.DataSource;

public class StudentDbUtil{

	private DataSource dataSource;
	
	public StudentDbUtil(DataSource theDataSource) {
		dataSource = theDataSource;
	}
	
	public List<Employee> getStudents() throws Exception{
		
		List<Employee> students = new ArrayList<>();
		
		Connection myConn = null;
		Statement myStmt = null;
		ResultSet myRs = null;
		
		try {
		// get a connection
		myConn = dataSource.getConnection();
		// create sql statement
		String sql = "SELECT * FROM student ORDER BY last_name";
		
		myStmt = myConn.createStatement();
		// execute query
		
		myRs=myStmt.executeQuery(sql);
		// process result set
			while(myRs.next()) {
				
				// retrieve data from set row
				int id = myRs.getInt("id");
				String firstName = myRs.getString("first_name");
				String lastName = myRs.getString("last_name");
				String email = myRs.getString("email");
				
				// create new student object
				Employee tempStudent = new Employee(id, firstName, lastName, email);
				
				// add it to the list of students
				students.add(tempStudent);
			}
		return students;
		
		}
		finally {
			// close JDBC objects
			close(myConn, myStmt, myRs);
		}		
	}

	private void close(Connection myConn, Statement myStmt, ResultSet myRs) {

		try {
			if(myRs!= null) {
				myRs.close();
			}
			if(myStmt != null) {
				myStmt.close();
			}
			if(myConn != null) {
				myConn.close();
			}
		} catch(Exception e) {
			e.printStackTrace();
		}
	}

	public void addStudent(Employee theStudent) throws Exception{

		Connection myConn = null;
		PreparedStatement myStmt = null;
		
		try {
			// get db connection
			myConn = dataSource.getConnection();
			// Create sql for insert
			String sql = "INSERT INTO student "
					+"(first_name, last_name, email) "
					+"VALUES (?, ?, ?)";
			myStmt = myConn.prepareStatement(sql);
			// set the param values for the student (1 based <-- so start at 1)
			myStmt.setString(1, theStudent.getFirstName());
			myStmt.setString(2, theStudent.getLastName());
			myStmt.setString(3, theStudent.getEmail());

		// execute sql insert
			myStmt.execute();
		}
		finally {
		// clean up JDBC objects
			close(myConn, myStmt, null);
		}
	}

	public Employee getStudent(String theStudentId) throws Exception {
		Employee theStudent = null;
				
		Connection myConn = null;
		PreparedStatement myStmt = null;
		ResultSet myRs = null;
		int studentId;
		
		try {
			// convert student id to int
			studentId = Integer.parseInt(theStudentId);
			
			// get connection to db
			myConn = dataSource.getConnection();
			
			// create sql to get selected student
			String sql = "SELECT * FROM student where id=?";
			
			// create prepared statement
			myStmt = myConn.prepareStatement(sql);
			
			// set params
			myStmt.setInt(1, studentId);
			
			// execture statement
			myRs = myStmt.executeQuery();
			
			// retrieve data from result set row
			if (myRs.next()) {
				String firstName = myRs.getString("first_name");
				String lastName = myRs.getString("last_name");
				String email = myRs.getString("email");

				// use the studentId during construction
				theStudent = new Employee(studentId, firstName, lastName, email);
				
			} else {
				throw new Exception("Could not find student id: " + studentId);
			}
			
			return theStudent;
		} finally {
			// close connections
			close(myConn, myStmt, myRs);
		}
	}

	public void updateStudent(Employee theStudent) throws Exception {

		Connection myConn = null;
		PreparedStatement myStmt = null;
		
		try {
			// get connection
			myConn = dataSource.getConnection();
			
			// create sql update stmt
			String sql = "UPDATE student "
						+"set first_name=?, last_name=?, email=? "
						+"where id=?";
			
			// prepare stmt
			myStmt = myConn.prepareStatement(sql);
			
			// set params
			myStmt.setString(1, theStudent.getFirstName());
			myStmt.setString(2, theStudent.getLastName());
			myStmt.setString(3, theStudent.getEmail());
			myStmt.setInt(4, theStudent.getId());
			
			// execute
			myStmt.execute();
		}
		finally {
			// close connection
			close(myConn, myStmt, null);
		}
	}

	public void deleteStudent(String theStudentId) throws Exception {
		Connection myConn = null;
		PreparedStatement myStmt = null;
		
		try {
			// convert student id to int
			int id = Integer.parseInt(theStudentId);
			
			// get connection
			myConn = dataSource.getConnection();
			
			// create sql update stmt
			String sql = "DELETE FROM student "
						+"where id=?";
			
			// prepare stmt
			myStmt = myConn.prepareStatement(sql);
			
			// set params
			myStmt.setInt(1, id);
			
			// execute
			myStmt.execute();
		}
		finally {
			// close connection
			close(myConn, myStmt, null);
		}
		
	}
}
